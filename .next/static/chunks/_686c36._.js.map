{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuannguyen/code/sei/projects/re-work/marvel-api/lib/api.ts"],"sourcesContent":["// import axios from 'axios'\nimport md5 from \"md5\"\n\nconst timeStamp = new Date().getTime()\nconst hash = md5(\n  String(\n    timeStamp +\n      process.env.NEXT_PUBLIC_MARVEL_PRIVATE_KEY! +\n      process.env.NEXT_PUBLIC_MARVEL_PUBLIC_KEY!,\n  ),\n)\nexport const getCharacterByBane = async (name: string) => {\n  const url = `https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${name}&apikey=${process.env.NEXT_PUBLIC_MARVEL_PUBLIC_KEY}&hash=${hash}&ts=${timeStamp}&limit=100`\n  const res = await fetch(url)\n  const result = await res.json()\n  const { data } = result\n  return data.results\n}\n\nexport const getCharacterById = async (id: string) => {\n  const url = `https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=${process.env.NEXT_PUBLIC_MARVEL_PUBLIC_KEY}&hash=${hash}&ts=${timeStamp}&limit=50`\n  const res = await fetch(url)\n  const result = await res.json()\n  const { data } = result\n  return data.results[0]\n}\n\nexport const getComicsByCharacterId = async (id: string) => {\n  const url = `https://gateway.marvel.com:443/v1/public/characters/${id}/comics?apikey=${process.env.NEXT_PUBLIC_MARVEL_PUBLIC_KEY}&hash=${hash}&ts=${timeStamp}&limit=50`\n  const res = await fetch(url)\n  const result = await res.json()\n  const { data } = result\n  return data.results\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAC5B;AAMM;;AAJN,MAAM,YAAY,IAAI,OAAO,OAAO;AACpC,MAAM,OAAO,CAAA,GAAA,6HAAA,CAAA,UAAG,AAAD,EACb,OACE;AAKG,MAAM,qBAAqB,OAAO;IACvC,MAAM,MAAM,CAAC,mEAAmE,EAAE,KAAK,QAAQ,uEAA4C,MAAM,EAAE,KAAK,IAAI,EAAE,UAAU,UAAU,CAAC;IACnL,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,SAAS,MAAM,IAAI,IAAI;IAC7B,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,OAAO,KAAK,OAAO;AACrB;AAEO,MAAM,mBAAmB,OAAO;IACrC,MAAM,MAAM,CAAC,oDAAoD,EAAE,GAAG,QAAQ,uEAA4C,MAAM,EAAE,KAAK,IAAI,EAAE,UAAU,SAAS,CAAC;IACjK,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,SAAS,MAAM,IAAI,IAAI;IAC7B,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,OAAO,KAAK,OAAO,CAAC,EAAE;AACxB;AAEO,MAAM,yBAAyB,OAAO;IAC3C,MAAM,MAAM,CAAC,oDAAoD,EAAE,GAAG,eAAe,uEAA4C,MAAM,EAAE,KAAK,IAAI,EAAE,UAAU,SAAS,CAAC;IACxK,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,SAAS,MAAM,IAAI,IAAI;IAC7B,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,OAAO,KAAK,OAAO;AACrB"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuannguyen/code/sei/projects/re-work/marvel-api/components/characterPage/ComicDetails.tsx"],"sourcesContent":["\"use client\"\nimport { getComicsByCharacterId } from \"@/lib/api\"\nimport { useEffect, useState } from \"react\"\nimport Loader from \"../Loader\"\n\nconst ComicDetails = ({ characterId }: { characterId: string }) => {\n  const [comics, setComics] = useState(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getComicsByCharacterId(characterId)\n      setComics(data)\n    }\n    fetchData()\n  }, [characterId])\n  console.log(comics)\n  if (!comics) return <Loader />\n  return <div className=\"text-7xl text-red-200\">{characterId}</div>\n}\n\nexport default ComicDetails\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAKA,MAAM,eAAe,CAAC,EAAE,WAAW,EAA2B;;IAC5D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;oDAAY;oBAChB,MAAM,OAAO,MAAM,CAAA,GAAA,6GAAA,CAAA,yBAAsB,AAAD,EAAE;oBAC1C,UAAU;gBACZ;;YACA;QACF;iCAAG;QAAC;KAAY;IAChB,QAAQ,GAAG,CAAC;IACZ,IAAI,CAAC,QAAQ,qBAAO,6LAAC,wHAAA,CAAA,UAAM;;;;;IAC3B,qBAAO,6LAAC;QAAI,WAAU;kBAAyB;;;;;;AACjD;GAbM;KAAA;uCAeS"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/tuannguyen/code/sei/projects/re-work/marvel-api/components/characterPage/Comic.tsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from \"react\"\nimport { ArrowRight } from \"lucide-react\"\nimport ComicDetails from \"./ComicDetails\"\nconst Comic = ({\n  characterId,\n  available,\n}: {\n  characterId: string\n  available: number\n}) => {\n  const [isOpen, setOpen] = useState(false)\n  return (\n    <div className=\"w-full space-y-4\">\n      <div\n        onClick={() => setOpen(!isOpen)}\n        className=\"flex w-full cursor-pointer items-center justify-between\"\n      >\n        <h1 className=\"cursor-pointer text-4xl font-bold text-white\">\n          View Comics ( {available} available)\n        </h1>\n        <ArrowRight\n          size={40}\n          className={`${isOpen && \"rotate-90\"} text-white transition-all`}\n        />\n      </div>\n      {isOpen && <ComicDetails characterId={characterId} />}\n    </div>\n  )\n}\n\nexport default Comic\n"],"names":[],"mappings":";;;;AACA;AAEA;AADA;;;AAFA;;;;AAIA,MAAM,QAAQ,CAAC,EACb,WAAW,EACX,SAAS,EAIV;;IACC,MAAM,CAAC,QAAQ,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,SAAS,IAAM,QAAQ,CAAC;gBACxB,WAAU;;kCAEV,6LAAC;wBAAG,WAAU;;4BAA+C;4BAC5C;4BAAU;;;;;;;kCAE3B,6LAAC,qNAAA,CAAA,aAAU;wBACT,MAAM;wBACN,WAAW,GAAG,UAAU,YAAY,0BAA0B,CAAC;;;;;;;;;;;;YAGlE,wBAAU,6LAAC,+IAAA,CAAA,UAAY;gBAAC,aAAa;;;;;;;;;;;;AAG5C;GAzBM;KAAA;uCA2BS"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}